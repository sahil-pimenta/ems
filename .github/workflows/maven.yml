# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven and Docker Compose

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Start Docker services
      run: docker compose -f docker-compose.yml up -d

    - name: Wait for services to be ready
      run: sleep 30  # You can replace this with actual health checks if needed

    - name: Verify running containers
      run: docker ps -a

    - name: Build with Maven (CI profile)
      run: mvn -B -Dspring.profiles.active=ci clean package

    - name: Run tests (optional)
      run: mvn test

    - name: Shutdown Docker containers
      if: always()
      run: docker compose -f docker-compose-ci.yml down --volumes

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
